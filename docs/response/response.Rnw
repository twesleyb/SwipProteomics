% title: response.tex
% description: Response to eLife Reviewers
% author: twab

% USAGE: 
% to compile this document:
%    R  >>> knitr::knit("response.Rnw")
%    sh >>> pdflatex response.tex


<<renv, echo=FALSE, cache=FALSE, results='hide'>>=

# prepare the R environment
root <- "~/projects/SwipProteomics"
renv::load(root,quiet=TRUE)
devtools::load_all(quiet=TRUE)

suppressPackageStartupMessages({
  library(knitr)
  library(dplyr)
  library(data.table)
})

# global knitr options
opts <- list(tidy=FALSE,message=FALSE,warning=FALSE,fig.width=4,fig.height=4.5)
do.call(opts_chunk$set,opts)

@


% document setup

\documentclass[11pt]{elife}
\usepackage{amsmath}
\usepackage{amssymb}
\usepackage{amsthm}
\usepackage{ragged2e}
\usepackage{caption}
\usepackage{fancyhdr}
\usepackage{graphicx}
\usepackage{titlesec}
\usepackage{blkarray}
\usepackage{csquotes}

% location of figures for this compiled document
\graphicspath{ {./figs/} }


\title{Supplementary Methods\\
\small{Genetic Disruption of WASHC4 Drives Endo-lysosomal Dysfunction and \\
Cognitive-Movement Impairments in Mice and Humans}}


% Authors
\author[1\authfn{0}]{Jamie Courtland}
\author[1\authfn{0}]{Tyler W. A. Bradshaw}
\author[2]{Greg Waitt}
\author[2,3]{Erik J. Soderblom}
\author[2]{Tricia Ho}
\author[4]{Anna Rajab}
\author[5]{Ricardo Vancini}
\author[2\authfn{1}]{Il Hwan Kim}
\author[6]{Ting Huang}
\author[6]{Olga Vitek}
\author[3]{Scott H. Soderling}

\affil[1]{Department of Neurobiology, Duke University School of Medicine, 
Durham, NC 27710, USA}
\affil[2]{Proteomics and Metabolomics Shared Resource, 
Duke University School of Medicine, Durham, NC 27710, USA}
\affil[3]{Department of Cell Biology, Duke University School of Medicine, 
Durham, NC 27710, USA}
\affil[4]{Burjeel Hospital, VPS Healthcare, Muscat, Oman}
\affil[5]{Department of Pathology, Duke University School of Medicine, 
Durham, NC 27710, USA}
\affil[6]{Khoury College of Computer Sciences, Northeaster University,
Boston, MA 02115, USA}

\contrib[\authfn{0}]{These authors contributed equally to this work.}
\presentadd[\authfn{1}]{Department of Anatomy and Neurobiology, 
University of Tennessee Health Science Center, Memphis, TN 38163, USA}

\corr{jlc123@duke.edu}{JC}
\corr{tyler.w.bradshaw@duke.edu}{TWAB}
\corr{greg.waitt@duke.edu}{GW}
\corr{erik.soderblom@duke.edu}{EJB}
\corr{tricia.ho@duke.edu}{TH}
\corr{drannarajab@gmail.com}{DR}
\corr{ricardo.vancini@duke.edu}{RV}
\corr{ikim9@uthsc.edu}{IK}
\corr{huang.tin@northeastern.edu}{TH}
\corr{o.vitek@northeastern.edu}{OV}
\corr{scott.soderling@duke.edu}{SHS}

% page header
\rhead{Supplemental Methods} 

% reduce space above and below equations
\setlength{\abovedisplayskip}{3pt}
\setlength{\belowdisplayskip}{3pt}


\begin{document}

% title
\maketitle


% abstract
\begin{abstract}

In the review of this manuscript, significant concerns were raised by the
reviewers about the validity of our statistal approach to perform protein- and 
module-level inference from our proteomics datasets.
Previously, we analyzed our \texttt{WASH-BioID} and \textt{SWIP-TMT}
proteomics datasets with the \texttt{edgeR} package for R. \texttt{edgeR} was
originally designed for analysis of transcriptomics read count data. We
failed to fully consider its validitity for proteomics data. 
Here we address these concerns by describing our revised statistical approach.
Our revised approach utilizes the recently published tool, 
\texttt{MSstatsTMT}, and its linear mixed model framework to perform 
protein- and module-level inference from our spatial TMT proteomics dataset.

\end{abstract}


\section{Reanalysis of SWIP\textsuperscript{P1019R} Spatial Proteomics}

We performed a TMT proteomics experiment in order to explore how the
SWIP\textsuperscript{P1019R} mutation may result changes in the brain proteome.
Our previous approach used the \texttt{edgeR} package  to assess differential
abundance of proteins and protein-groups or modules between SWIP{P1019R} mutant
(MUT) mice and littermate, genetically wild-type, 'Control' mice.

Signal intensity in protein proteomics experiments is fundamentally related to 
the number of ions generated from a ioninized, fragmented protein. 
Quantification can be performed at several resolutions, e.g. MS2 versus MS3
level quanticication. From this observation, we formed the innacurate conclusion 
that mass spectrometry data can be thought of as negative binomial count data as
signal intensity is related to the number of ions generated from a ionionized
species. Based on this assumption, we justified the use of \texttt{edgeR}, 
a package originally designed for analysis of read count data generated by 
RNA-seq or similar technologies. 
Statisitical inference in \texttt{edgeR} is built on a 
negative binomial (NB) model framework in which the data are assumed to be 
adequately described by a NB distribution parameterized by a dispersion 
parameter, $\phi$. Practically, the dispersion parameter accounts for 
mean-variance relationships observed in proteomics and transcriptomics data. 

Moreover, \texttt{edgeR} employs empirical Bayes methods that allow for the 
estimation of feature-specific (i.e. gene or protein) biological variation, 
even for experiments with small numbers of biological replicates, as is common 
in transcriptomics and proteomics experiments. This EB strategy reduces the 
uncertainty of the estimates and improves testing power.

We evaluated the overall adequacy of the \texttt{edgeR} model by plotting the 
residual protein deviance statistics of all proteins against their theoretical, 
normal quantiles in a quantile-quantile plot. A linear relationship between the
observed and theoretical values is an indicator of a good-fit. 

\textbf{Figure \ref{fig:gof}} 
illustrates the divergence of the observed deviance statistics for data fit with
the NB model. These plots emphasize the overall lack of fit of proteomics data 
fit by the \texttt{edgeR} model.  

As an alternative to \texttt{edgeR} we considered 
\texttt{MSstatsTMT}, an extension of MSstats for analysis of TMT proteomics
experiments. \\

%% figure 1 
\begin{figure}[ht]
	\begin{fullwidth}
		\begin{center}
		\includegraphics[width=0.9\paperwidth,keepaspectratio]{gof}
		\caption{\textbf{Goodness-of-fit of \texttt{edgeR} (A), and 
		\texttt{MSstatsTMT} (B) statistical approaches.} The overall
		adequacy of the linear models fit to the data were assessed 
		by plotting the residual deviance for all proteins as a 
		quantile-quantile plot (McCarthy \textit{et al.}, (2012)). 
		\textbf{(A)} For analysis with \textt{edgeR}, The normalized
		protein data from \texttt{MSstatsTMT} were fit with a negative
		binomal generalized linear model (NBGLM) of the form: 
		\texttt{Abundance} $\sim$ \texttt{Mixture + Condition}.
		Where \texttt{Mixure} is an additive blocking factor that 
		accounts for variablity between experiments. 
		The NB framework used by edgeR utilizes a dispersion parameter 
		to account for mean-variance relationships in the data.
		The dispersion parameter can take several forms. 
                \texttt{edgeR} supports three dispersion models: 'common',
		'trended', and 'tagwise'. However, when using \texttt{edgeR's}
		robust quasi-likelihood test methods, only global (i.e. 'common'
		or 'trended') dispersion metrics are appropriate 
		(see \texttt{edgeR::glmQLFit's} documentation). 
		We plot the protein-wise deviance from the data fit withe ach of
		the disperions parameters. Protein-wise deviance
		statistics were transformed to normality and plotted against
		theoretical normal quantiles using the \texttt{edgeR::gof}
		function. \textbf{(B)} For analysis with \texttt{MSstatsTMT},
		the normalized protein data were fit with a linear mixed-effects 
		model (LMM) of the form: 
		\texttt{Abundance} $\sim$ \texttt{0 + Condition + (1|Mixture)}. 
		Where \texttt{Mixture} represents the random effect
		of \texttt{Mixture}. The residual deviance and degrees of 
		freedom were extracted from the fitted models, z-score
		normalized, and plotted as in (A). Proteins with a significantly 
		poor fit are indicated as outliers in blue 
		(Holm-adjusted P-value $<$ 0.05).}
		\label{fig:gof}
	\end{center}
	\end{fullwidth}
\end{figure}



\texttt{MSstatsTMT} utilizes a linear mixed-model framework. The strength of 
linear mixed models (LMMs) is in their ability to account for complex sources of 
variation in an experimental design. 

%% MSstatsTMT
MSstatsTMT represents a step towards a more unified statistical framework for
analysis of proteomics data. However, significant work remains.

We preprocessed peptide level data exported from \texttt{Proteome Discoverer}
using custom R scripts and then performed statistical interence at the level of 
proteins and protein groups or modules using \texttt{edgeR's} \texttt{exactTest}
or \texttt{glmQLF} functions. \\ 

At the core of our normalization appraoch is the use of common quality control
(QC) samples, analyzed in technical duplicate in each TMT mixture. The sample 
pool QC sample was formed by combining aliquots of all biological replicates.
This sample therefore is representative biological and technical variation.
We utilzize the IRS or internal reference standard normalization described
by Plubell et al., 2017.

In practice, we find that it is essential to insure that the input data for
clustering is of the highest quality in order too...

\texttt{MSstatsTMT} performs normalization within each TMT Run or 
Mixture:Channel. 
We remove PSMs that exhibit abnormal variablity, accounting for this
mean-variance relationsihp.

The most important step in our normalization approach is 
IRS normalization. MS2 random sampling results in identification and
quantification of proteins by different peptides in each MS experiment.
To account for this source of variability, protein measurements are
adjusted by a scaling factor such that the geometric mean of all
internal reference standards are equal (Plubell et al., 2017).
This is essential to account for the stochasticisity of peptide
quantification in MS experiments. 

Our previous appraoch can be sumamrized as the "Sum + IRS Normalization" method
described by Huang et al., 2020. We summarize proteins as the sum of its
features and use IRS noramlization. A potential weakness of the sum method is
that outlier peptides can strongly influence the summary value. Median-based
methods (median and median-polish) avoid this problem. We examined outliers in a
method described by Ping et al., (20xx).



Mixed models use both fixed and random effects. These correspond
to a hierarchy of levels with the repeated, correlated measurement
occurring among all of the lower level units for each particular upper
level unit.

\begin{displayquote}
	In a mixed model one or more covariates 
	are a categorical variable  representing experimental or 
	observational "units" in the data set. 
	[...]
	If the set of possible levels of the covariate is fixed and reproducible 
	we model the covariate using fixed-effects parameters. 
	If the levels that we observed represent a random sample from
	the set of all possible levels we incorporate random effects in the
	model.
\end{displayquote}

Huang et al., describe a general statistical framework for TMT mass spectrometry
experiments. A TMT proteomics experiment consists of the analysis of 
\texttt{m =1} ... \texttt{M} concatensions of isobarically labeled samples or \texttt{Mixtures}. 
Within a mixture, each TMT channel is dedicated to the analysis of
\texttt{c = 1} ... \texttt{C} individual biological or treatment \texttt{Conditions} 
prepared from \texttt{b = 1} ... \texttt{B} biological replicates or \texttt{Subjects}. 
A single mixture may be profiled in \texttt{t = 1} ... \texttt{T} technical replicate 
mass spectrometry runs. 

The following mixed-effects model describes protein abundance measured in an
in an experiment composed of M mixtures, T technical replicates of Mixture, C
conditions, and B biological Subjects. 

%% Full model
\begin{equation} \label{eq1}
	Y_{mcbt} = \mu + Mixture_m + TechRep(Mixture)_{m(t)} + Subject_b + 
	Condition_c + \epsilon_{mcbt}
\end{equation}

Mixture a variation between
mixtures, and 
nd TechRep(Mixture) distinguish technical
between replicate mass spectrometry runs of a same mixtureo

If a component of the model is not estimable, it is removed. Thus, if there is
no technical replication of Mixture, the model is reduced to: \\

%% Reduced model - no technical replication of mixture
\begin{equation} \label{eq2}
	Y_{mcbt} = \mu + Mixture_m + Condition_c + Subject_{mcb} + \epsilon_{mcb}
\end{equation}

Control and Mutant mouse.

It is assumed that error at the level of protein summaries are independent and
non-systematic (no mean variance) errors at the level of protein summaries εmtcb can be assumed
independent and non-systematic.

Where Mixture is a mixed-effect and represents variation between TMT mixtures.
Subject is a mixed-effect and represents variation between biological Subjects
Condition is a fixed effect. The term $\epsilon$ 
is a random effect representing both biological and technical variation, 
quantifying any remaining error ($\sigma^2$). \\

The constraints distinguish the fixed and
the random components of variation. Comparisons of interest (i.e., conditions),
are at the level of the subplot. Their
standard errors are derived from the subplot components of variatio
Subject represetnts biological replicates using the convention taht each
biological replicate has a unique identifier across Mixtures and Conditions. 


To distinguish between Mixtures which may be fractionated, and these
\texttt{Fractions} analyzed to increase the depth of coverage in an MS
experiment, we refer to fractions as \texttt{BioFraction}.

In our experiment, the fixed effect term Condition 
represents interaction of Genotype and BioFraction--the 14 combinations 
of 7 BioFractions fractions from Control and Mutant mice. 

We prepared 7 \texttt{BioFractions} from 'Control' and SWIP\textsuperscript{P1019R} 'Mutant' mice. 
14 conditions
We analyzed data from 6 Subjects, three bioreplicate Control and 
SWIP\textsuperscript{P1019R} Mutant mice.

%% reduced model - no repeated measures of Subject
\begin{equation} \label{eq3}
	Y_{mcbt} = \mu + Mixture_m + Condition_c + \epsilon_{mc}
\end{equation}


\begin{figure}[h]
  \begin{fullwidth}
  \begin{center}
	  \includegraphics[width=0.9\paperwidth,keepaspectratio]{design}
	  \caption{\textbf{Experimental Design.} We performed three 16-plex TMT
	  experiments. Each TMT mixture is a concatenation of 16 labeled
	  samples. In each experiment we analyzed 7 subcellular
	  \texttt{BioFractions} prepared from the brain of a 'Control' or
	  'Mutant' mouse. In all we analyzed 3 \texttt{Subjects} from each 
	  {Condition}. Each \texttt{Mixture} includes two \txttt{Channels}
	  dedicated to the analysis of a common quality control sample.}
	  \label{fig:design}
  \end{center}
  \end{fullwidth}
\end{figure}

In our experimental design, we made measurments from seven BioFractions 
from each subject. Thus, we should include the term 
Subject, representing the 6 individual mice or subjects analyzed in our 
experiment. \\


\begin{figure}[h]
  \begin{fullwidth}
  \begin{center}
	  \includegraphics[width=0.9\paperwidth,keepaspectratio]{contrasts}
	  \caption{\textbf{Statistical Comparisons.} We assessed two types of
	  contrasts. Each row of the matrix specifies a contrast between
	  positive and negative coefficients in the mixed effects model fit to
	  each protein. Contrasts1-7 are 'intra-BioFraction' contrasts that
	  specify the pairwise comparisons of Control and Mutant groups for a
	  single fraction. In Contrast 8 we compare 'Mutant-Control' and asses
	  the overall difference of 'Control' and 'Mutant' conditions.  Each
	  contrast is a vector of sum 1.}
	  \label{fig:contrasts}
  \end{center}
  \end{fullwidth}
\end{figure}

However, in our design \texttt{Mixture} is confounded with the
term \texttt{Subject} -- in each mixture we analyzed all \texttt{BioFractions} 
from a single Control and Mutant mouse. Thus we can choose to account for the 
effect of \texttt{Mixture} or \texttt{Subject}, but not both. 
Assuming Mixture contributes greater to the variance, we drop the term Subject,
and the reduced model is equivalent  to \ref{eq1}. \\

Model based testing of differential abundance between pairs of conditions
is assessed through contrast of conditioned means estimated by fitting the
parameters of the model by REML to obtain $\hat{\beta}$, $\sigma^2$ and
$\hat{V}$.

The degrees of freedom are determined by the Satterthwaite approximation[REF],
and the T-statistic for the contrast is taken to be (lmerTest ref): \\

%% T-statistic Equation
\begin{equation}
	t = \frac{l^T * \hat{\beta}}{sqrt(l * \sigma^2 * \hat{V} * l^T)}
\end{equation}

$\sigma^2$ is the error from \textbf{Equation} \ref{eq1}.
$l^T$ is a vector specifying a contrast between positive and 
negative coefficients in the model.

Together, the denominator $\sqrt(l * \sigma^2 * \hat{V} * l^T)$ is the 
standard error of the contrast.


<<fit the model, eval=TRUE, echo=TRUE>>=

suppressPackageStartupMessages({
  library(dplyr)
  library(data.table)
})

## load SwipProteomics data
data(swip)
data(gene_map)
data(msstats_prot)
data(alt_contrast)
data(msstats_contrasts)

## formula to be fit:
fx0 <- formula("Abundance ~ 0 + Condition + (1|Mixture)")

# fit the model
idx <- msstats_prot$Protein == swip
fm <- lmerTest::lmer(fx0, msstats_prot[idx,])

# calculate model statistics
model_summary <- summary(fm,ddf="Satterthwaite")

df <- model_summary$coefficients
df %>% as.data.table(keep.rownames="Coefficient") %>% knitr::kable()

# evaluate goodness-of-fit
r2_nakagawa <- r.squaredGLMM.merMod(fm)
r2_nakagawa %>% round(3) %>% knitr::kable()

contrast <- msstats_contrasts[1,]
lmerTestContrast(fm,contrast) %>% knitr::kable()

@

% re recursive clustering: necessary to resolve significant heterogenity which
% exists in large modules -- also improves recovery of biological signal.

\end{document}
Quality Metric

We sought to identify groups, aka clusters or modules, of proteins that strongly
covary together across subcellular space. Intuitively, we wish to identify a
partition of the graph which maximizes intra-module connectivity and minimizes 
inter-module connectivity. Numerous quality statistics descriving the overall
quality of a network partition exist, and numerous heuristical algorithms

Identification of communities in a graph by optimization of a quality function
is NP-hard5, and consequentially many heuristic algorithms exist.
One of the most well known algorithms, is the Louvain algorithm
(Traag2010ref10). 

We utilized a recent improvement of the Louvain algorith, the 
Leiden algorithm to identify optimal partitions of the graph. 
The Leiden algorithm is implemented in Python and supports several quality
statistics, including Modularity, CPM, Surprise, RBER, and RBConfiguration.

We aim to cluster the protein-covariation network in order to identify modules
which cohesive protein abundance profiles.

For each model fit the module-level data, we asses the proprotion of variance
explained by BioFraction, Genotype, Mixture, and Protein using the
\texttt{VariancePartition} R package. We also compute Nagakawa's coefficient of
determination for mixed models, as implemented by the R \texttt{MuMin} package. 
Inspection of these variance explained by the components of our model we 
realize a natural description of a modules quality. 

R2(fixef) aka R2c (conditional) -- interpretation: the total variance explained
by fixed effects (Genotype:BioFraction). We wish to maximize this quantity.

PVE(protein) -- the percent of the modules variation explained by protein
variability. An ideal module is a perfect summary of its constituent proteins
and this quantity is 0. We aim to minimize the PVE(protein).

An ideal module is a perfect summary of its constituent proteins. Thus, we seek
to minimize the variation arising from Protein within a module. While minimizing
this quantity, we aim to retain clusters whose variation attributed to fixed
effects of BioFraction and Genotype is maximized. Thus, a simple quality metric
for a module may be the ratio of variance attributable to fixed effects and the
random effect of protein:

q_k = PVE(fixef) / PVE(protein)

This is equivalent to:
q_k = var(fixef) / var(protein)

The overall quality of a partition is the average all module quality.

All things being equal, an increase in the number of clusters results in a
decrease in overall quality. (Imagine splitting a perfect module,into two; for
each the variance attributed to Protein is 0, but when this module is split the
variance attributable to each modules fixed effects is halved).
